/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.6
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class BITMAP : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal BITMAP(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(BITMAP obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~BITMAP() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          acswigPINVOKE.delete_BITMAP(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public int w {
    set {
      acswigPINVOKE.BITMAP_w_set(swigCPtr, value);
    } 
    get {
      int ret = acswigPINVOKE.BITMAP_w_get(swigCPtr);
      return ret;
    } 
  }

  public int h {
    set {
      acswigPINVOKE.BITMAP_h_set(swigCPtr, value);
    } 
    get {
      int ret = acswigPINVOKE.BITMAP_h_get(swigCPtr);
      return ret;
    } 
  }

  public int clip {
    set {
      acswigPINVOKE.BITMAP_clip_set(swigCPtr, value);
    } 
    get {
      int ret = acswigPINVOKE.BITMAP_clip_get(swigCPtr);
      return ret;
    } 
  }

  public int cl {
    set {
      acswigPINVOKE.BITMAP_cl_set(swigCPtr, value);
    } 
    get {
      int ret = acswigPINVOKE.BITMAP_cl_get(swigCPtr);
      return ret;
    } 
  }

  public int cr {
    set {
      acswigPINVOKE.BITMAP_cr_set(swigCPtr, value);
    } 
    get {
      int ret = acswigPINVOKE.BITMAP_cr_get(swigCPtr);
      return ret;
    } 
  }

  public int ct {
    set {
      acswigPINVOKE.BITMAP_ct_set(swigCPtr, value);
    } 
    get {
      int ret = acswigPINVOKE.BITMAP_ct_get(swigCPtr);
      return ret;
    } 
  }

  public int cb {
    set {
      acswigPINVOKE.BITMAP_cb_set(swigCPtr, value);
    } 
    get {
      int ret = acswigPINVOKE.BITMAP_cb_get(swigCPtr);
      return ret;
    } 
  }

  public SWIGTYPE_p_GFX_VTABLE vtable {
    set {
      acswigPINVOKE.BITMAP_vtable_set(swigCPtr, SWIGTYPE_p_GFX_VTABLE.getCPtr(value));
    } 
    get {
      IntPtr cPtr = acswigPINVOKE.BITMAP_vtable_get(swigCPtr);
      SWIGTYPE_p_GFX_VTABLE ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_GFX_VTABLE(cPtr, false);
      return ret;
    } 
  }

  public uint id {
    set {
      acswigPINVOKE.BITMAP_id_set(swigCPtr, value);
    } 
    get {
      uint ret = acswigPINVOKE.BITMAP_id_get(swigCPtr);
      return ret;
    } 
  }

  public int x_ofs {
    set {
      acswigPINVOKE.BITMAP_x_ofs_set(swigCPtr, value);
    } 
    get {
      int ret = acswigPINVOKE.BITMAP_x_ofs_get(swigCPtr);
      return ret;
    } 
  }

  public int y_ofs {
    set {
      acswigPINVOKE.BITMAP_y_ofs_set(swigCPtr, value);
    } 
    get {
      int ret = acswigPINVOKE.BITMAP_y_ofs_get(swigCPtr);
      return ret;
    } 
  }

  public int seg {
    set {
      acswigPINVOKE.BITMAP_seg_set(swigCPtr, value);
    } 
    get {
      int ret = acswigPINVOKE.BITMAP_seg_get(swigCPtr);
      return ret;
    } 
  }

  public SWIGTYPE_p_p_unsigned_char line {
    set {
      acswigPINVOKE.BITMAP_line_set(swigCPtr, SWIGTYPE_p_p_unsigned_char.getCPtr(value));
    } 
    get {
      IntPtr cPtr = acswigPINVOKE.BITMAP_line_get(swigCPtr);
      SWIGTYPE_p_p_unsigned_char ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_p_unsigned_char(cPtr, false);
      return ret;
    } 
  }

  public IntPtr GetLine(int index) { return acswigPINVOKE.BITMAP_GetLine(swigCPtr, index); }

  public BITMAP() : this(acswigPINVOKE.new_BITMAP(), true) {
  }

}
